{"version":3,"sources":["components/header.js","services/api-service.js","components/user.js","components/comment.js","components/comment-list.js","components/post.js","components/post-list.js","components/app.js","index.js"],"names":["Header","react_default","a","createElement","className","ApiService","_baseUrl","_getData","url","fetch","concat","_this","then","res","json","getPosts","getUsers","getComments","User","props","_props$user","user","name","email","address","suite","street","city","defaultProps","Comment","_ref","comment","body","CommentList","comments","Fragment","map","components_comment","key","id","Post","post","title","components_user","comment_list","PostList","posts","components_post","App","state","users","isLoading","apiService","dowloadPost","setState","_this$apiService","Promise","all","_ref2","Object","slicedToArray","console","log","objectSpread","find","userId","filter","postId","_this$state","this","showedPosts","getPostWithData","header","length","post_list","type","onClick","Component","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.144c38c3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"navbar-brand\">react_dynamic-list-of-posts</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default class ApiService {\r\n  _baseUrl = 'https://jsonplaceholder.typicode.com/';\r\n\r\n  _getData = url => {\r\n    return fetch(`${this._baseUrl}${url}`).then(res => res.json());\r\n  };\r\n\r\n  getPosts = () => this._getData('posts');\r\n  getUsers = () => this._getData('users');\r\n  getComments = () => this._getData('comments');\r\n}\r\n","import React from 'react';\r\n\r\nconst User = props => {\r\n  const { name, email, address } = props.user;\r\n  const { suite, street, city } = address;\r\n\r\n  return (\r\n    <span>\r\n      {name} {email} {suite} {street} {city}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default User;\r\n\r\nUser.defaultProps = {\r\n  user: {\r\n    address: {\r\n      suite: null,\r\n      street: null,\r\n      city: null,\r\n    },\r\n    name: null,\r\n    email: null,\r\n  },\r\n  email: null,\r\n};\r\n","import React from 'react';\r\n\r\nconst Comment = ({ comment }) => {\r\n  const { name, body, email } = comment;\r\n  return (\r\n    <li className=\"list-group-item d-flex justify-content-between align-items-center bg-secondary\">\r\n      <div className=\"card border-0 bg-secondary\">\r\n        <h6 className=\"card-subtitle\">\r\n          {name}({email})\r\n        </h6>\r\n        <p className=\"card-text\">{body}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport Comment from './comment';\r\n\r\nconst CommentList = ({ comments }) => {\r\n  return (\r\n    <>\r\n      <h5 className=\"mb-1\">Comments</h5>\r\n      <ul className=\"list-group list-group-flush\">\r\n        {comments.map(comment => (\r\n          <Comment comment={comment} key={comment.id} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React from 'react';\r\nimport User from './user';\r\nimport CommentList from './comment-list';\r\n\r\nconst Post = ({ post }) => {\r\n  const { title, body, user, comments } = post;\r\n  return (\r\n    <li className=\"list-group-item d-flex justify-content-center align-items-center p-0 border-0\">\r\n      <div className=\"card border-0 bg-primary text-white mb-3\">\r\n        <h4 className=\"card-header\">{title}</h4>\r\n        <div className=\"card-body\">\r\n          <h6 className=\"card-subtitle mb-2\">\r\n            <User user={user} />\r\n          </h6>\r\n          <p className=\"card-text\">{body}</p>\r\n          <CommentList comments={comments} />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from './post';\r\n\r\nconst PostList = ({ posts }) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {posts.map(post => (\r\n        <Post post={post} key={post.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React, { Component } from 'react';\nimport Header from './header';\nimport ApiService from '../services/api-service';\nimport PostList from './post-list';\n\nclass App extends Component {\n  state = {\n    posts: [],\n    users: [],\n    comments: [],\n    isLoading: false,\n  };\n\n  apiService = new ApiService();\n\n  dowloadPost = () => {\n    this.setState({ isLoading: true });\n\n    const { getPosts, getUsers, getComments } = this.apiService;\n\n    Promise.all([getPosts(), getUsers(), getComments()]).then(([posts, users, comments]) => {\n      this.setState({\n        posts,\n        users,\n        comments,\n        isLoading: false,\n      });\n      console.log(this.state);\n    });\n  };\n\n  getPostWithData(posts, users, comments) {\n    const newPosts = posts.map(post => {\n      return {\n        ...post,\n        user: users.find(user => user.id === post.userId),\n        comments: comments.filter(comment => comment.postId === post.id),\n      };\n    });\n    return newPosts;\n  }\n\n  render() {\n    const { isLoading, posts, users, comments } = this.state;\n    let showedPosts = [];\n    if (posts) {\n      showedPosts = this.getPostWithData(posts, users, comments);\n      console.log(showedPosts);\n    }\n    return (\n      <>\n        <Header />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 text-center p-5\">\n              {isLoading ? (\n                <span>Loading...</span>\n              ) : posts.length > 0 ? (\n                <PostList posts={showedPosts} />\n              ) : (\n                <button type=\"button\" className=\"btn btn-info\" onClick={this.dowloadPost}>\n                  Download Posts\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}